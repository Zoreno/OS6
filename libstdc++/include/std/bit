/**
 * @file bit
 * @author Joakim Bertils
 * @version 0.1
 * @date 2020-07-28
 * 
 * @brief Implements bitwise operators and functions
 * 
 * @copyright Copyright (C) 2020,
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https: //www.gnu.org/licenses/>.
 * 
 */

#ifndef __BIT_
#define __BIT_

#pragma GCC system_header

#include <bits/c++config.hpp>

#if __cplusplus >= 201402L
#define CONSTEXPR constexpr
#else
#define CONSTEXPR
#endif

#include <type_traits>
#include <limits>

OS6STD_BEGIN_SYSTEM_HEADER

namespace OS6STD
{

template <typename _T>
CONSTEXPR _T __rotl(_T __x, unsigned int __s) noexcept
{
    constexpr auto _N = numeric_limits<_T>::digits;
    const unsigned __sN = __s % _N;
    return (__x << __sN) | (__x >> ((_N - __sN) % _N));
}

template <typename _T>
CONSTEXPR _T __rotr(_T __x, unsigned int __s) noexcept
{
    constexpr auto _N = numeric_limits<_T>::digits;
    const unsigned __sN = __s % _N;
    return (__x >> __sN) | (__x << ((_N - __sN) % _N));
}

} // namespace OS6STD

OS6STD_END_SYSTEM_HEADER

#endif

//=============================================================================
// End of file
//=============================================================================